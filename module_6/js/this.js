/* ‚ûñthis ‚Äî —Ü–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–µ –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ –≤ JavaScript, —è–∫–µ –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è —Ñ—É–Ω–∫—Ü—ñ—ó.
‚ûñ–ü—Ä–æ—Å—Ç–∏–º–∏ —Å–ª–æ–≤–∞–º–∏: –≤–æ–Ω–æ –≤–∫–∞–∑—É—î "—Ö—Ç–æ –≤–∏–∫–ª–∏–∫–∞–≤ —Ñ—É–Ω–∫—Ü—ñ—é".
‚ûñ–ó–Ω–∞—á–µ–Ω–Ω—è this –Ω–µ –≤–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è –ø—Ä–∏ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó, –∞ –≤–∏–∑–Ω–∞—á–∞—î—Ç—å—Å—è –≤ –º–æ–º–µ–Ω—Ç –≤–∏–∫–ª–∏–∫—É.*/

/* 
 this = –∑–∞–ª–µ–∂–∏—Ç—å –≤—ñ–¥ —Ç–æ–≥–æ, –•–¢–û –≤–∏–∫–ª–∏–∫–∞–≤ —Ñ—É–Ω–∫—Ü—ñ—é

obj.method()      ‚Üí this = obj
func()            ‚Üí this = undefined (strict) –∞–±–æ window (non-strict)
new Func()        ‚Üí this = –Ω–æ–≤–∏–π –æ–±'—î–∫—Ç
arrow func        ‚Üí this = –∑–∑–æ–≤–Ω—ñ */




//–∑–∞–¥–∞—á–∞. –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –º–µ—Ç–æ–¥—ñ–≤ –æ–±'—î–∫—Ç–∞ pizzaPalace, —Ä–æ–∑—Å—Ç–∞–≤–∏–≤—à–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ this 
// –≤ –º—ñ—Å—Ü—è—Ö –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π —ñ –º–µ—Ç–æ–¥—ñ–≤ –æ–±'—î–∫—Ç–∞.

/*const pizzaPalace = {
  pizzas: ["Supercheese", "Smoked", "Four meats"],

  checkPizza(pizzaName) {
    return this.pizzas.includes(pizzaName);
  },

  order(pizzaName) {
    const isPizzaAvailable = this.checkPizza(pizzaName);

    if (!isPizzaAvailable) {
      return `Sorry, there is no pizza named ¬´${pizzaName}¬ª`;
    }

    return `Order accepted, preparing ¬´${pizzaName}¬ª pizza`;
  },
};
*/


// 1. this —É –º–µ—Ç–æ–¥–∞—Ö –æ–±‚Äô—î–∫—Ç–∞
// –ö–æ–ª–∏ —Ñ—É–Ω–∫—Ü—ñ—è —î –º–µ—Ç–æ–¥–æ–º –æ–±'—î–∫—Ç–∞ —ñ –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è —á–µ—Ä–µ–∑ –∫—Ä–∞–ø–∫—É, this –ø–æ—Å–∏–ª–∞—î—Ç—å—Å—è –Ω–∞ —Å–∞–º –æ–±'—î–∫—Ç.
/* 

const user = {
  name: "Alice",
  sayHello() {
    console.log(`Hello, I am ${this.name}`);
  }
};
user.sayHello(); // "Hello, I am Alice"
*/
//üîπ this —Ç—É—Ç ‚Üí user.


// 2. this —É –∑–≤–∏—á–∞–π–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ—è—Ö
// –£ —Å—Ç—Ä–æ–≥–æ–º—É —Ä–µ–∂–∏–º—ñ ('use strict') —É –∑–≤–∏—á–∞–π–Ω—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó this –±—É–¥–µ undefined.

/*
'use strict';
function test() {
  console.log(this);
}
test(); // undefined. 
*/

//–ë–µ–∑ —Å—Ç—Ä–æ–≥–æ–≥–æ —Ä–µ–∂–∏–º—É this —É –∑–≤–∏—á–∞–π–Ω—ñ–π —Ñ—É–Ω–∫—Ü—ñ—ó (–Ω–µ –º–µ—Ç–æ–¥—ñ) ‚Äî —Ü–µ –≥–ª–æ–±–∞–ª—å–Ω–∏–π –æ–±'—î–∫—Ç (window —É –±—Ä–∞—É–∑–µ—Ä—ñ).


//3. this —É —Å—Ç—Ä—ñ–ª–æ—á–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ—è—Ö
// –°—Ç—Ä—ñ–ª–æ—á–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–µ –º–∞—é—Ç—å –≤–ª–∞—Å–Ω–æ–≥–æ this. –í–æ–Ω–∏ –±–µ—Ä—É—Ç—å –π–æ–≥–æ –∑ –º—ñ—Å—Ü—è, –¥–µ –±—É–ª–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ.

/* const user = {
  name: "Alice",
  friends: ["Bob", "Charlie"],
  showFriends: () => {
    console.log(this.friends); // ‚ùå this —Ç—É—Ç –Ω–µ user
  }
};

user.showFriends(); // undefined. 
// üîπ –°—Ç—Ä—ñ–ª–∫—É –Ω–µ –≤–∞—Ä—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —è–∫ –º–µ—Ç–æ–¥ –æ–±'—î–∫—Ç–∞, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–µ–Ω this.
// –ü—Ä–∞–≤–∏–ª—å–Ω–æ:

showFriends() {
  console.log(this.friends);
}

*/

// 4. this —É –≤–∫–ª–∞–¥–µ–Ω–∏—Ö —Ñ—É–Ω–∫—Ü—ñ—è—Ö
//–í–∫–ª–∞–¥–µ–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –≤—Ç—Ä–∞—á–∞—î this, —Ç–æ–º—É —á–∞—Å—Ç–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å —Å—Ç—Ä—ñ–ª–∫—É –∞–±–æ .bind.

/*. 

const obj = {
  name: "Test",
  outer() {
    const inner = () => {
      console.log(this.name);
    };
    inner();
  }
};
obj.outer(); // "Test"
// üîπ –°—Ç—Ä—ñ–ª–∫–∞ —Ç—É—Ç –±–µ—Ä–µ this –∑ outer().

*/
// 5. –ü–æ—à–∏—Ä–µ–Ω—ñ –ø–æ–º–∏–ª–∫–∏
// ‚ùå –í–∏–∫–ª–∏–∫ –±–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É:
/*
const check = obj.method;
check(); // this = undefined
// ‚úÖ –†—ñ—à–µ–Ω–Ω—è:
const check = obj.method.bind(obj);
check(); // this = obj
*/


//–∑–∞–¥–∞—á–∞
// –ü–æ—Ç—Ä—ñ–±–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—é —à–≤–∏–¥–∫–æ—Å—Ç—ñ –ø—Ä–æ–∫–∞—Ç–Ω–∏—Ö –∞–≤—Ç–æ.
// –°—Ç–≤–æ—Ä—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –ø—Ä–∏–π–º–∞—Ç–∏ 1 –ø–∞—Ä–∞–º–µ—Ç—Ä (–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–∑–≤–æ–ª–µ–Ω—É —à–≤–∏–¥–∫—ñ—Å—Ç—å)
// —Ç–∞ –≤–∏–≤–æ–¥–∏—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —á–∏ –º–∏ —Ä—É—Ö–∞—î–º–æ—Å—å –∑ –±–µ–∑–ø–µ—á–Ω–æ—é —à–≤–∏–¥–∫—ñ—Å—Ç—é —á–∏ –ø–µ—Ä–µ–≤–∏—â—É—î–º–æ, —Ñ—É–Ω–∫—Ü—ñ—è –º–∞—î –æ–ø—Ä–∞—Ü—å–æ–≤—É–≤–∞—Ç–∏ –æ–±'—î–∫—Ç –∞–≤—Ç–æ–º–æ–±—ñ–ª—è —è–∫ this


/*
const SPEED = 60;

const bmw = {
    speed: 30,
    brand: "bmw"
}

const audi = {
    speed: 80,
    brand: "audi"
}

function speedSensor(maxSpeed) {
    if(this.speed <= maxSpeed) {
        return `–ê–≤—Ç–æ ${this.brand} —Ä—É—Ö–∞—î—Ç—Å—å—è –∑ –±–µ–∑–ø–µ—á–Ω–æ—é —à–≤–∏–¥–∫—ñ—Å—Ç—é`;
    }

    return `–ê–≤—Ç–æ ${this.brand} –ø–µ—Ä–µ–≤–∏—â—É—î —à–≤–∏–¥–∫—ñ—Å—Ç—å`
}

console.log(speedSensor.call(bmw, SPEED));
console.log(speedSensor.apply(audi, [SPEED]));
*/




// –∑–∞–≤–¥–∞–Ω–Ω—è –Ω–∞–ø–∏—Å–∞—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–Ω–µ –∑–∞–±–µ–∑–ø–µ—á–µ–Ω–Ω—è –¥–ª—è –∞–≤—Ç–æ–º–æ–±—ñ–ª—è, –∞ —Å–∞–º–µ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏ –Ω–∞–±–æ—Ä—É —Ç–∞ –∑–Ω–∏–∂–µ–Ω–Ω—è —à–≤–∏–¥–∫–æ—Å—Ç—ñ –≤ —Å–∏—Å—Ç–µ–º—ñ –∫—Ä—É—ó–∑ –∫–æ–Ω—Ç—Ä–æ–ª—é.
// –°—Ç–≤–æ—Ä–∏—Ç–∏ –æ–±'—î–∫—Ç cruiseControl –∑ –º–µ—Ç–æ–¥–∞–º–∏ accelerate —Ç–∞ decrease, –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—è–º–∏ speed —Ç–∞ brand.

/* const cruiseControl = {
     speed: 0,
     brand: "Audi",
     accelerate() {
         this.speed += 10;
         console.log(`–ê–≤—Ç–æ–º–æ–±—ñ–ª—å ${this.brand} –ø—Ä–∏—Å–∫–æ—Ä—é—î—Ç—å—Å—è, —à–≤–∏–¥–∫—ñ—Å—Ç—å ${this.speed}`);
     },
     decrease() {
         if(this.speed <= 0) {
             console.log("–ê–≤—Ç–æ –∑—É–ø–∏–Ω–∏–ª–æ—Å—è");
             return;
         }

         this.speed -= 10;
         console.log(`–ê–≤—Ç–æ–º–æ–±—ñ–ª—å ${this.brand} –≥–∞–ª—å–º—É—î, —à–≤–∏–¥–∫—ñ—Å—Ç—å ${this.speed}`);
     }
 }

 cruiseControl.accelerate();
 cruiseControl.accelerate();

 cruiseControl.decrease();
 cruiseControl.decrease();
 cruiseControl.decrease();

 console.log(cruiseControl);
*/




 /*
–ü–µ—Ä–µ–¥ –∑–≤—ñ–ª—å–Ω–µ–Ω–Ω—è–º —Ä–æ–∑—Ä–æ–±–Ω–∏–∫ –∑–ª–∞–º–∞–≤ –≤–∏—Ö—ñ–¥–Ω–∏–π –∫–æ–¥ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∞–∫–∞—É–Ω—Ç–∞–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ –Ω–∞—à–æ–≥–æ —Å–µ—Ä–≤—ñ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ —ó–∂—ñ.
–í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –º–µ—Ç–æ–¥—ñ–≤ –æ–±'—î–∫—Ç–∞ customer, —Ä–æ–∑—Å—Ç–∞–≤–∏–≤—à–∏ –≤—ñ–¥—Å—É—Ç–Ω—ñ this –ø—ñ–¥ —á–∞—Å –∑–≤–µ—Ä–Ω–µ–Ω–Ω—è –¥–æ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –æ–±'—î–∫—Ç–∞.

–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π —Ü–µ–π —Å—Ç–∞—Ä—Ç–æ–≤–∏–π –∫–æ–¥ —ñ –≤–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥. –ü—ñ—Å–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è –æ–±'—î–∫—Ç–∞ –º–∏ –¥–æ–¥–∞–ª–∏ –≤–∏–∫–ª–∏–∫–∏ –º–µ—Ç–æ–¥—ñ–≤. 
–£ –∫–æ–Ω—Å–æ–ª—å –±—É–¥—É—Ç—å –≤–∏–≤–µ–¥–µ–Ω—ñ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ —ó—Ö —Ä–æ–±–æ—Ç–∏.*/

/*
const customer = {
  username: "Mango",
  balance: 24000,
  discount: 0.1,
  orders: ["Burger", "Pizza", "Salad"],
  getBalance() {
    return this.balance;
  },
  getDiscount() {
    return this.discount;
  },
  setDiscount(value) {
    this.discount = value;
  },
  getOrders() {
    return this.orders;
  },
  addOrder(cost, order) {
    this.balance -= cost - cost * this.discount;
    this.orders.push(order);
  },
};

customer.setDiscount(0.15);
console.log(customer.getDiscount()); // 0.15
customer.addOrder(5000, "Steak");
console.log(customer.getBalance()); // 19750
console.log(customer.getOrders()); // ["Burger", "Pizza", "Salad", "Steak"]

/*—â–æ –∑—Ä–æ–±–ª–µ–Ω–æ –≤ –∫–æ–∂–Ω–æ–º—É –º–µ—Ç–æ–¥—ñ:

getBalance()
–ü–æ–≤–µ—Ä—Ç–∞—î –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ balance –æ–±'—î–∫—Ç–∞. –¢–æ–º—É: return this.balance;.

getDiscount()
–ü–æ–≤–µ—Ä—Ç–∞—î this.discount, –∞ –Ω–µ –≥–ª–æ–±–∞–ª—å–Ω—É/–ª–æ–∫–∞–ª—å–Ω—É –∑–º—ñ–Ω–Ω—É.

setDiscount(value)
–û–Ω–æ–≤–ª—é—î –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å –æ–±'—î–∫—Ç–∞: this.discount = value;. –ü—ñ—Å–ª—è —Ü—å–æ–≥–æ –≤—Å—ñ –º–µ—Ç–æ–¥–∏, —â–æ —á–∏—Ç–∞—é—Ç—å this.discount, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –Ω–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è.

getOrders()
–ü–æ–≤–µ—Ä—Ç–∞—î –º–∞—Å–∏–≤ –∑–∞–º–æ–≤–ª–µ–Ω—å –æ–±'—î–∫—Ç–∞: return this.orders;.

addOrder(cost, order)
–û–Ω–æ–≤–ª—é—î –±–∞–ª–∞–Ω—Å —ñ –¥–æ–¥–∞—î –Ω–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É –º–∞—Å–∏–≤.*/





/*   –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–ª–∞—Å—É Car. –î–æ–¥–∞–π –ø—É–±–ª—ñ—á–Ω—É —Å—Ç–∞—Ç–∏—á–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å maxPrice –∑—ñ –∑–Ω–∞—á–µ–Ω–Ω—è–º —á–∏—Å–ª–æ 50000 - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º–∞ —Ü—ñ–Ω–∞ –∞–≤—Ç–æ–º–æ–±—ñ–ª—è.

–î–æ–¥–∞–π —Å–µ—Ç—Ç–µ—Ä—É price –ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∑–Ω–∞—á–µ–Ω–Ω—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ newPrice, —â–æ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è. –Ø–∫—â–æ –≤–æ–Ω–æ –±—ñ–ª—å—à–µ –∑–∞ maxPrice, —Å–µ—Ç—Ç–µ—Ä –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏—Ç—å, –∞ —è–∫—â–æ –º–µ–Ω—à–µ –∞–±–æ –¥–æ—Ä—ñ–≤–Ω—é—î, —Ç–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—É—î —Ü—ñ–Ω—É –∞–≤—Ç–æ–º–æ–±—ñ–ª—è.

–ü—ñ–¥ –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è–º –∫–ª–∞—Å—É –º–∏ –¥–æ–¥–∞–ª–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –µ–∫–∑–µ–º–ø–ª—è—Ä—ñ–≤ —ñ –≤–∏–∫–ª–∏–∫–∏ –º–µ—Ç–æ–¥—ñ–≤, —â–æ–± –ø–æ–∫–∞–∑–∞—Ç–∏, —è–∫ –±—É–¥—É—Ç—å –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏—Å—è –≥–µ—Ç—Ç–µ—Ä–∏ —ñ —Å–µ—Ç—Ç–µ—Ä–∏ price.
 */

class Car {
    static maxPrice = 50000;
    
  #price;

  constructor(params) {
    this.#price = params.price;
  }

  get price() {
    return this.#price;
  }

  set price(newPrice) {
      if (newPrice <= Car.maxPrice) {
        this.#price = newPrice;   // –Ø–∫—â–æ newPrice –±—ñ–ª—å—à–µ –∑–∞ maxPrice ‚Äî –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ
    }
  }
}

const audi = new Car({ price: 35000 });
console.log(audi.price); // 35000

audi.price = 49000;
console.log(audi.price); // 49000

audi.price = 51000;
console.log(audi.price); // 49000